/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alumni;

import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class AlumniSearch extends javax.swing.JFrame {

    /**
     * Creates new form AlumniSearch
     */
    public AlumniSearch() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        jButton6.hide();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_aname = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        cmb_year = new javax.swing.JComboBox<>();
        cmb_dept = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jLabel1.setText("Department Name");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Alumni Search by Category");

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jLabel3.setText("Passout year");

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 16)); // NOI18N
        jLabel4.setText("Name");

        jButton1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/icon-search.gif"))); // NOI18N
        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cmb_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        cmb_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_yearActionPerformed(evt);
            }
        });

        cmb_dept.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Electronics", "Civil" }));

        jButton2.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/icon-search.gif"))); // NOI18N
        jButton2.setText("Go");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/icon-search.gif"))); // NOI18N
        jButton3.setText("Go");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/excel.png"))); // NOI18N
        jButton4.setText("View All students");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 16)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/exit.png"))); // NOI18N
        jButton5.setText("cancel");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/alumni/Images/return_arrow.png"))); // NOI18N
        jButton6.setText("Back");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(224, 224, 224)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(78, 78, 78)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_aname)
                                    .addComponent(cmb_year, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmb_dept, 0, 172, Short.MAX_VALUE))
                                .addGap(126, 126, 126)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 266, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_aname, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         Connection con;
        ResultSet rs;
          PreparedStatement ps;
                con=DBconnect.connect();
                String s=""+cmb_year.getSelectedItem();
                jLabel2.hide();
                jButton5.hide();
                jLabel1.hide();
                jLabel3.hide();
                jLabel4.hide();
                txt_aname.hide();
                cmb_year.hide();
                cmb_dept.hide();
                jButton1.hide();
                jButton2.hide();
                jButton3.hide();
                jButton4.hide();
                jButton6.show();
        	/*String col[]={"Name","Enroll.No","Address","Emailid","Class"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                jt.getAutoResizeMode();
                Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                 jt.setRowHeight(20);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
               
		jsp.setBounds(200,100,1500,1500);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where pass_year=? ");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept")});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}    */
                String col[]={"Name"," "," ","Enroll.No","Address     ","Mobileno   ","Department","Image"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
               // jt.applyComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
              Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                jt.getAutoResizeMode();
                jt.setRowHeight(20);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
		jsp.setBounds(100,100,1500,800);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where pass_year=? ");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
                                jt.getColumnModel().getColumn(7).setCellRenderer(new ImageRenderer());
                                jt.setRowHeight(150);
                                InputStream is=rs.getBinaryStream("image");
                                BufferedImage img=ImageIO.read(is);
                                BufferedImage outimg=new BufferedImage(img.getWidth(),img.getHeight(),BufferedImage.TYPE_INT_RGB);
                                Graphics2D gd=outimg.createGraphics();
                                float xScale=(float)img.getWidth()/outimg.getWidth();
                                float yScale=(float)img.getHeight()/outimg.getHeight();
                                AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
                                gd.drawRenderedImage(img, at);
                                gd.dispose();
                                Image image=outimg.getScaledInstance(100,100,Image.SCALE_SMOOTH);
                                Icon imageIcon=new ImageIcon(image);
                                
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("middle_name"),rs.getString("last_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept"), imageIcon});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       Connection con;
        ResultSet rs;
          PreparedStatement ps;
                con=DBconnect.connect();
                String s=""+cmb_dept.getSelectedItem();
                jLabel2.hide();
                jLabel1.hide();
                jButton6.show();
                jButton5.hide();
                jLabel3.hide();
                jLabel4.hide();
                txt_aname.hide();
                cmb_year.hide();
                cmb_dept.hide();
                jButton1.hide();
                jButton2.hide();
                jButton3.hide();
                jButton4.hide();
                
        	/*String col[]={"Name","Enroll.No","Address","Emailid","Class"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
                jt.getAutoResizeMode();
                Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                 jt.setRowHeight(20);
		this.add(jsp);
               
		jsp.setBounds(200,100,1500,1500);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where dept=? ");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept")});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}    */
                String col[]={"Name"," "," ","Enroll.No","Address     ","Mobileno   ","Department","Image"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
               // jt.applyComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
              Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                jt.getAutoResizeMode();
                jt.setRowHeight(20);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
		jsp.setBounds(100,100,1500,800);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where dept=? ");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
                                jt.getColumnModel().getColumn(7).setCellRenderer(new ImageRenderer());
                                jt.setRowHeight(150);
                                InputStream is=rs.getBinaryStream("image");
                                BufferedImage img=ImageIO.read(is);
                                BufferedImage outimg=new BufferedImage(img.getWidth(),img.getHeight(),BufferedImage.TYPE_INT_RGB);
                                Graphics2D gd=outimg.createGraphics();
                                float xScale=(float)img.getWidth()/outimg.getWidth();
                                float yScale=(float)img.getHeight()/outimg.getHeight();
                                AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
                                gd.drawRenderedImage(img, at);
                                gd.dispose();
                                Image image=outimg.getScaledInstance(100,100,Image.SCALE_SMOOTH);
                                Icon imageIcon=new ImageIcon(image);
                                
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("middle_name"),rs.getString("last_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept"), imageIcon});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    Connection con;
        ResultSet rs;
          PreparedStatement ps;
                con=DBconnect.connect();
                jLabel2.hide();
                jLabel1.hide();
                jButton5.hide();
                jLabel3.hide();
                jLabel4.hide();
                jButton6.show();
                txt_aname.hide();
                cmb_year.hide();
                cmb_dept.hide();
                jButton1.hide();
                jButton2.hide();
                jButton3.hide();
                jButton4.hide();
                
        	/*String col[]={"Name","Enroll.No","Address","Emailid","Class"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
                jt.getAutoResizeMode();
                Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                 jt.setRowHeight(20);
		this.add(jsp);
		jsp.setBounds(200,100,1500,1500);
		try
		{
			ps=con.prepareStatement("select * from stud_reg");
			rs=ps.executeQuery();
			  while(rs.next())
			  {
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept")});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}*/
                String col[]={"Name"," "," ","Enroll.No","Address     ","Mobileno   ","Department","Image"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
               // jt.applyComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
              Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                jt.getAutoResizeMode();
                jt.setRowHeight(20);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
		jsp.setBounds(100,100,1500,800);
		try
		{
			ps=con.prepareStatement("select * from stud_reg");
                       
			rs=ps.executeQuery();
			  while(rs.next())
			  {
                                jt.getColumnModel().getColumn(7).setCellRenderer(new ImageRenderer());
                                jt.setRowHeight(150);
                                InputStream is=rs.getBinaryStream("image");
                                BufferedImage img=ImageIO.read(is);
                                BufferedImage outimg=new BufferedImage(img.getWidth(),img.getHeight(),BufferedImage.TYPE_INT_RGB);
                                Graphics2D gd=outimg.createGraphics();
                                float xScale=(float)img.getWidth()/outimg.getWidth();
                                float yScale=(float)img.getHeight()/outimg.getHeight();
                                AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
                                gd.drawRenderedImage(img, at);
                                gd.dispose();
                                Image image=outimg.getScaledInstance(100,100,Image.SCALE_SMOOTH);
                                Icon imageIcon=new ImageIcon(image);
                                
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("middle_name"),rs.getString("last_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept"), imageIcon});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    Connection con;
        ResultSet rs;
          PreparedStatement ps;
                con=DBconnect.connect();
                String s=txt_aname.getText();
                jLabel2.hide();
                jLabel1.hide();
                jLabel3.hide();
                jLabel4.hide();
                jButton6.show();
                jButton5.hide();
                txt_aname.hide();
                cmb_year.hide();
                cmb_dept.hide();
                jButton1.hide();
                jButton2.hide();
                jButton3.hide();
                jButton4.hide();
                jButton5.hide();
                String col[]={"Name"," "," ","Enroll.No","Address     ","Mobileno   ","Department","Image"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
               // jt.applyComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
              Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                jt.getAutoResizeMode();
                jt.setRowHeight(20);
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
		jsp.setBounds(100,100,1500,800);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where first_name=?");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
                                jt.getColumnModel().getColumn(7).setCellRenderer(new ImageRenderer());
                                jt.setRowHeight(150);
                                InputStream is=rs.getBinaryStream("image");
                                BufferedImage img=ImageIO.read(is);
                                BufferedImage outimg=new BufferedImage(img.getWidth(),img.getHeight(),BufferedImage.TYPE_INT_RGB);
                                Graphics2D gd=outimg.createGraphics();
                                float xScale=(float)img.getWidth()/outimg.getWidth();
                                float yScale=(float)img.getHeight()/outimg.getHeight();
                                AffineTransform at=AffineTransform.getScaleInstance(xScale,yScale);
                                gd.drawRenderedImage(img, at);
                                gd.dispose();
                                Image image=outimg.getScaledInstance(100,100,Image.SCALE_SMOOTH);
                                Icon imageIcon=new ImageIcon(image);
                                
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("middle_name"),rs.getString("last_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept"), imageIcon});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
        	/*String col[]={"Name","Enroll.No","Address","Emailid","Class"};
		DefaultTableModel dtm=new DefaultTableModel(null,col);
		JTable jt=new JTable(dtm);
                jt.getAutoResizeMode();
                Font font = new Font("Calibri", Font.PLAIN,20);
                jt.setFont(font);
                jt.setRowHeight(20);
                
		//jt.setAutoResizeMode(JTable.AUTO_RESIZE_ON);
		JScrollPane jsp=new JScrollPane(jt);
		this.add(jsp);
               
		jsp.setBounds(200,100,1500,1500);
		try
		{
			ps=con.prepareStatement("select * from stud_reg where first_name=? ");
                        ps.setString(1,s);
			rs=ps.executeQuery();
			  while(rs.next())
			  {
                                
				dtm.addRow(new Object[] {rs.getString("first_name"),rs.getString("enroll_no"),rs.getString("address"),rs.getString("mobile_no"),rs.getString("dept")});
			  } 
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		} */   
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         Home h=new Home();
   h.setVisible(true);
    this.dispose();
     
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
  AlumniSearch as=new AlumniSearch();
  as.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cmb_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_yearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlumniSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlumniSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlumniSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlumniSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlumniSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_dept;
    private javax.swing.JComboBox<String> cmb_year;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txt_aname;
    // End of variables declaration//GEN-END:variables
}
